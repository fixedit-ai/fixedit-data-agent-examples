# This override file:
# - Adds Ouroboros for monitoring, updating, and restarting unhealthy containers
# - Adds healthchecks to InfluxDB and Grafana
# - Configures Slack notifications for status updates
# - Overrides production secrets for InfluxDB and Grafana
#
# This stack is only intended as an example.

version: "3.8"

services:
  ouroboros:
    image: pyouroboros/ouroboros
    container_name: ouroboros
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - INTERVAL=300 # Check every 5 minutes
      - CLEANUP=true # Remove old images
      - SELF_UPDATE=true # Update Ouroboros itself
      - HEALTHCHECK_MONITORING=true # Restart unhealthy containers
      - NOTIFIERS=slack://${OUROBOROS_SLACK_HOOK_URL}
    labels:
      - "com.ouroboros.enable=true" # Allow Ouroboros to watch itself
    restart: unless-stopped

  influxdb:
    environment:
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      - "com.ouroboros.enable=true" # Explicitly allow monitoring
    restart: unless-stopped

  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_TOKEN}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      - "com.ouroboros.enable=true" # Explicitly allow monitoring
    restart: unless-stopped
