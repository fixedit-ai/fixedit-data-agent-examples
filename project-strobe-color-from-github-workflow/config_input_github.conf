# GitHub API Input Configuration for Workflow Status Monitoring
#
# This configuration uses Telegraf's HTTP input plugin to fetch the latest
# workflow run status from GitHub's REST API for continuous monitoring.
#
# Key Features:
# - Fetches recent workflow runs from ALL workflows in the repository
# - Alternative approach: Could filter by workflow ID in URL, but workflow IDs are harder to find than names
# - Therefore: Get all workflows here, filter by user-friendly workflow name in processor
# - Uses per_page parameter to ensure target workflow is included in results
# - Extracts both status (running state) and conclusion (final result)
# - Uses authenticated requests for access to private repositories
# - Processes JSON response and converts to Telegraf metrics
#
# Environment Variables Required:
# - GITHUB_TOKEN: Personal access token with 'workflow' scope
# - GITHUB_USER: GitHub username or organization
# - GITHUB_REPO: Repository name
# - GITHUB_BRANCH: Branch to monitor (typically 'main' or 'master')

[[inputs.http]]
  # GitHub Actions API endpoint for workflow runs
  # Fetches recent workflow runs across ALL workflows for the specified branch
  # Note: Could use /workflows/{workflow_id}/runs for direct filtering, but workflow IDs are hard to find
  # Instead: Get all recent runs here, filter by user-friendly workflow name in processor
  # per_page=10 works for repos with few workflows - increase for busy repos
  # IMPORTANT: Must be >= number of workflows to ensure target workflow is found
  urls = ["https://api.github.com/repos/${GITHUB_USER}/${GITHUB_REPO}/actions/runs?branch=${GITHUB_BRANCH}&per_page=10"]

  # HTTP method for the API request
  method = "GET"

  # Parse response as JSON format
  data_format = "json"

  # Override metric name for clarity in downstream processing
  # This name is used by the processor to identify GitHub workflow metrics
  name_override = "github_workflow"

  # JSON query to extract the workflow_runs array from the API response
  # The API returns: {"total_count": N, "workflow_runs": [...]}
  # This extracts just the workflow_runs array for processing
  json_query = "workflow_runs"

  # Fields to extract as tags (for filtering/grouping)
  # Tags are indexed and can be used for filtering in processors
  # status: current workflow state (queued, in_progress, completed)
  # conclusion: final result (success, failure, null if running)
  # name: workflow name
  tag_keys = ["status", "conclusion", "name"]

  # Fields to preserve as string values (not just numeric)
  # By default, Telegraf only preserves numeric fields from JSON
  json_string_fields = ["status", "conclusion", "name", "display_title", "id", "run_number"]

  # HTTP headers for API authentication and content negotiation
  [inputs.http.headers]
    # GitHub Personal Access Token for authenticated requests
    # Token should have 'workflow' scope for reading workflow runs
    Authorization = "Bearer ${GITHUB_TOKEN}"

    # Accept header specifying JSON response format
    # GitHub API supports multiple formats; JSON is most suitable for parsing
    Accept = "application/json"
