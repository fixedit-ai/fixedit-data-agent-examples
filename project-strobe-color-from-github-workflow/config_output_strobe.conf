# Axis Strobe Light Controller Output Configuration
#
# This configuration uses Telegraf's exec output plugin to trigger the
# trigger_strobe.sh script whenever workflow status changes are detected.
#
# Key Features:
# - Executes shell script for each color change event
# - Immediate execution with no batching for real-time response
# - JSON data format for structured communication with script
# - Timeout protection for API call sequences
# - Exec plugin runs external commands with metric data as stdin
# - Script receives JSON with color information: {"fields":{"color":"green"}}
#
# Environment Variables Required:
# - HELPER_FILES_DIR: Directory containing trigger_strobe.sh script (set automatically by the FixedIt Data Agent)
# - VAPIX_USERNAME: Axis device username
# - VAPIX_PASSWORD: Axis device password
# - VAPIX_IP: IP address of the Axis strobe device, should be 127.0.0.1 when running in the FixedIT Data Agent on an Axis Strobe.

[[outputs.exec]]
  # Filter to process only workflow color metrics
  # This ensures the script only runs when color changes occur
  # and ignores other metrics that might be in the pipeline
  namepass = ["workflow_color"]

  # Shell script command to execute for each color change
  # The script receives JSON data via stdin and controls the strobe
  # HELPER_FILES_DIR should point to the directory containing the script,
  # which is set automatically by the FixedIt Data Agent to the directory where
  # helper files are uploaded.
  command = ["${HELPER_FILES_DIR}/trigger_strobe.sh"]

  # Data format sent to the script via stdin
  # JSON format provides structured data that the script can parse easily
  # Format: {"fields":{"color":"green"},"name":"workflow_color",...}
  data_format = "json"

  # Disable batch format to send individual metrics to the script.
  # When false: sends single metric JSON object per execution.
  # When true: would send array of metrics (not needed for this use case).
  use_batch_format = false

  # Immediate execution settings for real-time response.
  # These settings minimize delay between GitHub status change and strobe activation.

  # Process one metric at a time for immediate response.
  # This ensures each color change triggers script execution immediately.
  # Higher values would batch multiple changes (undesirable for visual feedback).
  metric_batch_size = 1

  # Minimal buffer size. 2*metric_batch_size is the minimum value allowed in the
  # configuration according to the documentation.
  metric_buffer_limit = 2

  # Script execution timeout to prevent hanging.
  # The script makes multiple VAPIX API calls (start/stop profiles).
  # 10 seconds allows sufficient time for network round trips and error handling.
  # Increase if experiencing timeout issues on slow networks.
  # Setting this makes the application more robust since it can recover from
  # a hanging script.
  timeout = "10s"