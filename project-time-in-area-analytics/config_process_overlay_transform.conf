# Overlay Data Transformation Processor
#
# This processor transforms analytics detection data into the format expected
# by the overlay_manager.sh script, including coordinate transformation and
# field formatting.

[[processors.starlark]]
  # Source code for the transformation logic
  source = '''
def apply(metric):
    # Only process rate-limited metrics
    if metric.name != "rate_limited_alert_frame":
        return None
    
    # Extract bounding box coordinates (flat format from device)
    if ("bounding_box_left" in metric.fields and 
        "bounding_box_right" in metric.fields and 
        "bounding_box_top" in metric.fields and 
        "bounding_box_bottom" in metric.fields):
        
        left = metric.fields["bounding_box_left"]
        right = metric.fields["bounding_box_right"]
        top = metric.fields["bounding_box_top"]
        bottom = metric.fields["bounding_box_bottom"]
        
        # Calculate center coordinates in analytics system (0.0 to 1.0)
        center_x = (left + right) / 2.0
        center_y = (top + bottom) / 2.0
        
        # Transform to VAPIX API coordinate system (-1.0 to 1.0)
        # Formula: vapix_coord = (analytics_coord - 0.5) * 2
        vapix_x = (center_x - 0.5) * 2.0
        vapix_y = (center_y - 0.5) * 2.0
        
        # Create new overlay metric by copying the original
        overlay_frame = deepcopy(metric)
        overlay_frame.name = "overlay_frame"
        
        # Set transformed coordinates
        overlay_frame.fields["center_x"] = vapix_x
        overlay_frame.fields["center_y"] = vapix_y
        
        # Remove original bounding box fields since we now have center coordinates
        overlay_frame.fields.pop("bounding_box_left", None)
        overlay_frame.fields.pop("bounding_box_right", None)
        overlay_frame.fields.pop("bounding_box_top", None)
        overlay_frame.fields.pop("bounding_box_bottom", None)
        
        # Return the overlay metric
        return overlay_frame
    
    # If no bounding box, drop the metric (can't create overlay without position)
    return None
'''
