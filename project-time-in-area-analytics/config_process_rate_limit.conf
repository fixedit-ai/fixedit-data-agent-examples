# Rate limit messages to 1 per second to protect the overlay API
[[processors.starlark]]
  source = '''
load("time.star", "time")

state = {}

def apply(metric):
    # Only process alerting_frame metrics
    if metric.name != "alerting_frame":
        return None

    # Get the current state or initialize if not exists.
    # We use system time, not the message timestamp, since we
    # want to only let one message per second hit the overlay API.
    last_update = state.get("last_update") or 0
    current_time = time.now().unix
    
    # Calculate time since last update in seconds
    time_since_last = current_time - last_update
    
    # If less than 1 second has passed, drop the message
    if time_since_last < 1.0:
        return None
    
    # Update the last update time
    state["last_update"] = current_time

    # Create a new metric with the rate-limited name
    rate_limited_metric = deepcopy(metric)
    rate_limited_metric.name = "rate_limited_alert_frame"
    return rate_limited_metric
'''
