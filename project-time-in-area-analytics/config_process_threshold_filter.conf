# Threshold Filter Processor
#
# This processor filters detection frames based on time in area threshold.
# Only detections that exceed the configured threshold are passed through.
#
# Input: detection_frame metrics with time_in_area_seconds field
# Output: Only detection_frame metrics where time_in_area_seconds > ALERT_THRESHOLD_SECONDS
#
# Environment Variables:
# - ALERT_THRESHOLD_SECONDS: Minimum time in area in seconds to trigger alerts (required)

[[processors.starlark]]
  # Process only detection frames for threshold filtering
  namepass = ["detection_frame"]

  source = '''
def apply(metric):
    # Get time in area from the metric
    time_in_area = metric.fields.get("time_in_area_seconds", 0)

    # Parse threshold as float to ensure proper comparison with float time values
    threshold = float(${ALERT_THRESHOLD_SECONDS})

    # Only return metrics that exceed or equal the threshold
    if time_in_area >= threshold:
        # Create a new metric with the alerting name
        alerting_metric = deepcopy(metric)
        alerting_metric.name = "alerting_frame"
        return alerting_metric

    # Track doesn't exceed threshold - don't output
    return None
'''
