# FixedIT Data Agent Configuration for Timelapse with AWS S3
#
# This configuration captures images from an AXIS device and uploads them to AWS S3
# for timelapse video generation. Images are encoded as base64 in JSON format.
#
# Usage: Upload this file to the FixedIT Data Agent and enable it
# along with the required environment variables.

[agent]
  flush_interval = "10s"
  debug = ${TELEGRAF_DEBUG}
  interval = "${CAPTURE_INTERVAL_SEC}s"

[[inputs.exec]]
  # Run the script that captures the image from the camera and embeds it as a base64 encoded value.
  command = "${HELPER_FILES_DIR}/axis_image_consumer.sh"
  timeout = "30s"

  # Expect JSON output from the script (image will be embedded as a base64 encoded value).
  # We also need to explicitly specify the fields that should be treated as strings
  # since Telegraf's JSON parser by default only includes numeric fields.
  data_format = "json"
  json_string_fields = ["image_base64", "error"]

  # Set the name of the metric to "timelapse_image"
  name_override = "timelapse_image"

[[outputs.remotefile]]
  # Only upload metrics with the name "timelapse_image"
  namepass = ["timelapse_image"]

  # Configure the upload bucket and file path.
  # File naming pattern: DEVICE_SERIAL/YYYY-MM-DD/timelapse-HH-MM-SS.json.
  # File will be saved as JSON with the base64 encoded image in the message.
  remote = "s3,provider=AWS,access_key_id=${AWS_ACCESS_KEY_ID},secret_access_key=${AWS_SECRET_ACCESS_KEY},region=${AWS_REGION}:${S3_BUCKET}"
  files = ['${DEVICE_PROP_SERIAL}/{{.Time.Format "2006-01-02"}}/timelapse-{{.Time.Format "15-04-05"}}.json']
  data_format = "json"

  # Configure the cache settings for the upload.
  #
  # Controls how often rclone's VFS writes back (flushes) cached data to the remote.
  # Setting to "0s" disables periodic write-back - data is only written when required
  # by other triggers (file close, cache size limits), not on a timer.
  cache_write_back = "0s"
  # Amount of time the plugin waits for remaining cached writes to finish when shutting down.
  # The plugin will wait up to 5 seconds for all pending writes to complete before
  # forcefully shutting down. For this timelapse use case, loosing the last frame is not
  # a big deal, so we can keep this short.
  final_write_timeout = "5s"
  # Maximum size of local cache for buffering data when remote storage is unavailable.
  # Higher values allow more buffering during connectivity issues but use more RAM.
  # When this limit is exceeded, rclone starts dropping the oldest cached data.
  cache_max_size = "50MB"
  # Controls how long the plugin keeps internal state (serializers, modification timestamps)
  # for each file after its last write. Since we use unique files for each image,
  # we can clean up internal state much faster - no point keeping serializers for old files.
  forget_files_after = "1s"